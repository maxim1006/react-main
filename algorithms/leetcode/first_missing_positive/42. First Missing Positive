/**
 * @param {number[]} nums
 * @return {number}
 */
let firstMissingPositive = function(nums) {
    let length = nums.length;

    // если нет 1 то это ответ
    if (!nums.includes(1)) return 1;

    // remove all negative and 0 and > nums.length
    nums = nums.map(i => (i <= 0 || i > length) ? 1 : i);

    // set negative presented numbers
    nums.forEach((i, idx) => {
        let cur = Math.abs(i);
        // первый элемент вообще можно не учитывать (по идее дожен быть 1) поэтому храню в нем инфо о то есть ли элемент === length

        if (cur === length) {
            nums[0] = -Math.abs(nums[0]);
        } else {
            nums[cur] = -Math.abs(nums[cur]);
        }
    });

    for (let i = 1; i < length; i++) {
        if (nums[i] > 0) return i;
    }

    // если в массиве не было элемента с length то это и есть ответ, if (i === length) nums[0] = -length; тут проверка
    if (nums[0] > 0) return length;

    return length + 1;
};

console.log(firstMissingPositive([1,2,6,3,5,4])); // 7
console.log(firstMissingPositive([1,2,4])); // 3
console.log(firstMissingPositive([1,2,0])); // 3
