import { logFn } from '../../../utils/common.utils.js';

/*
* Учитывая массив положительных целых чисел nums и целое число k, вернуть количество смежных подмассивов, где произведение всех элементов в подмассиве строго меньше, чем k.

Например, учитывая входные данные nums = [10, 5, 2, 6], k = 100, ответ равен 8. Подмассивы с произведениями меньше k:
* [10], [5], [2], [6], [10, 5], [5, 2], [2, 6], [5, 2, 6]*/

/*получается что для каждого индекса количество подмассивов right - left + 1

Очень круто получается если разбить любой массив на подмассивы и посчитать по этой формуле то количество подмасивов (сумма подмассивов от 0 индекса и до последнего будет совпадать по этой формуле)
*/
function numberOfArrays(nums, k) {
    let left = 0;
    let temp = 1;
    let res = 0;

    // так как условие temp >= k то если k = 1 то while никогда не остановится
    if (k <= 1) return 0;

    for (let right = 0; right < nums.length; right++) {
        temp *= nums[right];

        while (temp >= k) {
            temp /= nums[left];

            ++left;
        }

        // при подсчете каждого индекса я прибавляю к текущему новые массивы которые получаются для каждого индекса
        // на первом индексе [10], на 2м [10, 5] [5] на 3м [10,5,2] [5,2] [2] и тд, а в сумме все они дадут все подмассивы
        res += right - left + 1;
    }

    return res;
}

logFn(numberOfArrays, [[10, 5, 2, 6], 100]); // 8
