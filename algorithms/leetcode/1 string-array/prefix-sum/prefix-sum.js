import { logFn } from '../../../utils/common.utils.js';

// Учитывая целочисленный массив nums, запросы массива, где запросы [i] = [x, y] и целочисленный предел, возвращают логический массив, который представляет ответ на каждый запрос. Запрос является истинным, если сумма подмассива от x до y меньше предела, или ложным в противном случае.
/*
 *
 * @returns [boolean]
 * */
function prefixSum(
    nums = [1, 6, 3, 2, 7, 2],
    queries = [
        [0, 3],
        [2, 5],
        [2, 4],
    ],
    limit = 13
) {
    let arr = [nums[0]];

    for (let i = 1; i < nums.length; i++) {
        arr.push(nums[i] + arr.at(-1));
    }

    //       [1, 6, 3, 2, 7, 2]
    // arr: [ 1, 7, 10, 12, 19, 21 ]

    // тут замес что из макс суммы вычитаю сумму начала и прибавляю сам элемент из изначального массива (так как вычел всю сумму вместе с ним, то его надо вернуть), потому что его тоже надо учитывать для лимита
    // от 2х до 5 = 5ая сумма - 2я сумма + 2 элемент из изначального массива
    return queries.map(([start, end]) => arr[end] - arr[start] + nums[start] < limit);
}

logFn(prefixSum); // [true, false, true] // [12, 14, 12];
