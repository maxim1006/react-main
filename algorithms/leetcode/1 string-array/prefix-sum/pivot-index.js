import { logFn } from '../../../utils/common.utils.js';

// https://leetcode.com/problems/find-pivot-index/
// Учитывая массив целых чисел, вычислить опорный индекс этого массива.
//
// Сводной индекс — это индекс, в котором сумма всех чисел строго слева от индекса равна сумме всех чисел строго справа от индекса.
//
// Если индекс находится на левом краю массива, то левая сумма равна 0, потому что слева нет элементов. Это также относится к правому краю массива.
//
// Возвращает самый левый опорный индекс. Если такого индекса не существует, вернуть -1.
function pivotIndex(nums) {
    // 0 также может быть левым значением, поэтому беру не первый элемент
    let arr = [0];

    for (let i = 0; i < nums.length; i++) {
        arr.push(nums[i] + arr.at(-1));
    }

    // получается что так как я добавил 0 в начало то 11 это сумма всех цифр до 6, те левая часть, правая часть при этом будет включать 6 поэтому допом вычитаю из правой части еще и 6 и получаю 11 === 11
    // [1, 7, 3, 6, 5, 6]
    // [0, 1, 8, 11, 17, 22, 28]

    for (let i = 0; i < arr.length; i++) {
        // если левая часть === правая часть
        if (arr[i] === arr.at(-1) - arr[i] - nums[i]) return i;
    }

    return -1;
}

logFn(pivotIndex, [[1, 7, 3, 6, 5, 6]]); // 3
logFn(pivotIndex, [[-2, 1, -1]]); // 0
