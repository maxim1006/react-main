worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    # Remove server info from headers
    server_tokens off;
    more_clear_headers Server;
    lua_load_resty_core off;
    # Proxy cache settings
    include /etc/nginx/cachesettings.conf;

    include /etc/nginx/mime.types;
    include /etc/nginx/resolvers.conf;
    default_type  application/octet-stream;

    log_format  custom ' $time_iso8601 '
    '"$request" $status $body_bytes_sent '
    '"$proxy_host$suffix$is_args$args" $upstream_addr'
    '"$http_referer" "$http_user_agent" '
    '"$http_x_forwarded_for"';
    keepalive_timeout 120;
    send_timeout 60;
    access_log /var/log/nginx/access.log custom;
    error_log /var/log/nginx/error.log info;
    client_max_body_size 1m;
    large_client_header_buffers 4 8k;
    server {
        listen 8080;

        server_tokens off;
        gzip_static on;
        gzip on;
        gzip_proxied any;
        gzip_comp_level 5;
        gzip_types application/x-javascript application/json application/javascript text/css image/jpeg image/png application/octet-stream;
        gzip_min_length   32;
        etag off;
        if_modified_since off;

         # Custom add_header
        include /etc/nginx/add-header.conf;
        client_body_timeout 60;
        client_header_timeout 60;

        #add recommended headers
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;
        add_header Strict-Transport-Security "max-age=63072000; includeSubdomains" always;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Xss-Protection "0" always;
        add_header Pragma no-cache always;
        add_header Cache-Control no-store always;

        add_header Feature-Policy $add_header_feature_policy always;
        add_header Permissions-Policy $add_header_permissions_policy always;
        add_header Content-Security-Policy $add_header_content_security_policy always;

        #set proxy headers
        proxy_set_header Access-Control-Allow-Origin "*";
        proxy_set_header Access-Control-Allow-Methods "GET,PUT,POST,DELETE,OPTIONS";
        proxy_set_header Access-Control-Allow-Headers "Content-Type";

        #defines rewrite rules (whether redirect to domain-resolver is needed)
        #gets environment variables
        include /etc/nginx/envvars.conf;

        #write your own config

        # Resources: images, icons, video, audio, HTC, fonts
        # https://www.nginx.com/blog/nginx-caching-guide
        # https://stackoverflow.com/questions/9230812/nginx-as-cache-proxy-not-caching-anything
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|webp|htc|woff|ttf|otf|woff2)\/?[^\/]*$ {
          proxy_cache resources_cache;
          include proxy-content-cache-valid.conf;
          proxy_cache_revalidate on;
          proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
          proxy_cache_background_update on;
          proxy_cache_lock on;
          proxy_cache_key "$scheme$request_method$host$request_uri";
          proxy_ignore_headers Expires;
          proxy_ignore_headers X-Accel-Expires;
          proxy_ignore_headers Cache-Control;

          proxy_hide_header X-Accel-Expires;
          proxy_hide_header Expires;
          proxy_hide_header Cache-Control;
          proxy_hide_header Pragma;
          proxy_hide_header Last-Modified;
          proxy_hide_header Etag;
          proxy_hide_header X-Powered-By;
          proxy_hide_header Server;
          proxy_hide_header Referrer-Policy;
          proxy_hide_header Content-Security-Policy;

          add_header X-Proxy-Cache $upstream_cache_status always;
          add_header Cache-Control "public, must-revalidate" always;
          add_header Feature-Policy $add_header_feature_policy always;
          add_header Permissions-Policy $add_header_permissions_policy always;
          add_header Content-Security-Policy $add_header_content_security_policy always;

          proxy_pass $backend;
          proxy_cache_bypass $http_nc_cache_bypass;
        }

        # Resources: images got by UUID
        location ~ ^/files/node/(.*?) {
          proxy_cache resources_cache;
          include proxy-content-cache-valid.conf;
          proxy_cache_revalidate on;
          proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
          proxy_cache_background_update on;
          proxy_cache_lock on;
          proxy_cache_key "$scheme$request_method$host$request_uri";
          proxy_ignore_headers Expires;
          proxy_ignore_headers X-Accel-Expires;
          proxy_ignore_headers Cache-Control;

          proxy_hide_header X-Accel-Expires;
          proxy_hide_header Expires;
          proxy_hide_header Cache-Control;
          proxy_hide_header Pragma;
          proxy_hide_header Last-Modified;
          proxy_hide_header Etag;
          proxy_hide_header X-Powered-By;
          proxy_hide_header Server;
          proxy_hide_header Referrer-Policy;
          proxy_hide_header Content-Security-Policy;

          add_header X-Proxy-Cache $upstream_cache_status always;
          add_header Cache-Control "public, must-revalidate" always;
          add_header Feature-Policy $add_header_feature_policy always;
          add_header Permissions-Policy $add_header_permissions_policy always;
          add_header Content-Security-Policy $add_header_content_security_policy always;

          proxy_pass $backend;
        }

        # Localization files
        location ~ ^/api/localization {
          proxy_cache resources_cache;
          include proxy-content-cache-valid.conf;
          proxy_cache_revalidate on;
          proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
          proxy_cache_background_update on;
          proxy_cache_lock on;
          proxy_cache_key "$scheme$request_method$host$request_uri";
          proxy_ignore_headers Expires;
          proxy_ignore_headers X-Accel-Expires;
          proxy_ignore_headers Cache-Control;

          proxy_hide_header X-Accel-Expires;
          proxy_hide_header Expires;
          proxy_hide_header Cache-Control;
          proxy_hide_header Pragma;
          proxy_hide_header Last-Modified;
          proxy_hide_header Etag;
          proxy_hide_header X-Powered-By;
          proxy_hide_header Server;
          proxy_hide_header Referrer-Policy;
          proxy_hide_header Content-Security-Policy;

          add_header X-Proxy-Cache $upstream_cache_status always;
          add_header Cache-Control "public, must-revalidate" always;
          add_header Feature-Policy $add_header_feature_policy always;
          add_header Permissions-Policy $add_header_permissions_policy always;
          add_header Content-Security-Policy $add_header_content_security_policy always;

          proxy_pass $backend;
        }

        # Resources: JS and CSS
        location ~* \.(?:css|js)$ {
          proxy_cache resources_cache;
          include proxy-content-cache-valid.conf;
          proxy_cache_valid 404 15m;

          proxy_ignore_headers Expires;
          proxy_ignore_headers X-Accel-Expires;
          proxy_ignore_headers Cache-Control;

          proxy_hide_header X-Accel-Expires;
          proxy_hide_header Expires;
          proxy_hide_header Cache-Control;
          proxy_hide_header Pragma;
          proxy_hide_header Last-Modified;
          proxy_hide_header Etag;
          proxy_hide_header Referrer-Policy;
          proxy_hide_header Content-Security-Policy;
          proxy_hide_header X-Powered-By;
          proxy_hide_header Server;

          add_header X-Proxy-Cache $upstream_cache_status always;
          add_header Cache-Control public always;
          add_header Feature-Policy $add_header_feature_policy always;
          add_header Permissions-Policy $add_header_permissions_policy always;
          add_header Content-Security-Policy $add_header_content_security_policy always;

          proxy_pass $backend;
          proxy_cache_bypass $http_nc_cache_bypass;
        }

        location = /manifest.json {
            proxy_cache resources_cache;
            include proxy-content-cache-valid.conf;
            proxy_cache_revalidate on;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_background_update on;
            proxy_cache_lock on;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            proxy_ignore_headers Expires;
            proxy_ignore_headers X-Accel-Expires;
            proxy_ignore_headers Cache-Control;

            proxy_hide_header X-Accel-Expires;
            proxy_hide_header Expires;
            proxy_hide_header Cache-Control;
            proxy_hide_header Pragma;
            proxy_hide_header Last-Modified;
            proxy_hide_header Etag;
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;
            proxy_hide_header Referrer-Policy;
            proxy_hide_header Content-Security-Policy;

            add_header X-Proxy-Cache $upstream_cache_status always;
            add_header Cache-Control "public, must-revalidate" always;
            add_header Feature-Policy $add_header_feature_policy always;
            add_header Permissions-Policy $add_header_permissions_policy always;
            add_header Content-Security-Policy $add_header_content_security_policy always;

            proxy_pass $backend;
        }

        location  = /health/live {
            access_log off;
            return 200 '{"status": "UP"}';
        }

        location  = /health {
            return 200 '{"status": "UP"}';
        }
        location  = /.well-known/apple-developer-merchantid-domain-association.txt {
            alias /usr/share/nginx/html/apple.txt;
        }
        location  = / {
            proxy_pass $backend/;
            proxy_set_header    Host $host;
            proxy_set_header    Forwarded "";
            proxy_redirect      off;
            proxy_hide_header   X-Frame-Options;
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;

            proxy_hide_header Cache-Control;
            proxy_hide_header Pragma;
            proxy_hide_header Referrer-Policy;
            proxy_hide_header Content-Security-Policy;

            set $dr_no_redirect "true";
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $remote_addr;
        }

        location ~ ^/(?<suffix>.*)$ {
            if ($request_uri ~ "^/(?<suffix>.*)$") {
                # empty because we only need to get not decoded url
            }
            proxy_pass $backend/$suffix;
            proxy_set_header    Host $host;
            proxy_set_header    Forwarded "";
            proxy_redirect      off;
            proxy_hide_header   X-Frame-Options;
            proxy_hide_header X-Powered-By;
            proxy_hide_header Server;

            proxy_hide_header Cache-Control;
            proxy_hide_header Pragma;
            proxy_hide_header Referrer-Policy;
            proxy_hide_header Content-Security-Policy;

            set $dr_no_redirect "true";
        }

        error_page   500 502 503 504  /maintenance.html;
        location = /maintenance.html {
            root   /usr/share/nginx/html;
        }
    }
}
