{
  "compilerOptions": {
    "jsx": "react",
    /* Basic Options */
    "sourceMap": true,
    "module": "NodeNext",
    "moduleResolution": "NodeNext",
    "target": "es6",
    "lib": ["esnext", "es2015", "es2017", "dom"],
    "allowJs": true,
    "removeComments": true,
    /* Emit comments to output. */
    /* Type Checking */
    "strict": true,
    /* Enable all strict type-checking options. */
    "noImplicitAny": true,
    /* Enable error reporting for expressions and declarations with an implied `any` type.. */
    "strictNullChecks": true,
    /* When type checking, take into account `null` and `undefined`. */
    "strictFunctionTypes": true,
    /* When assigning functions, check to ensure parameters and the return values are subtype-compatible. */
    "strictBindCallApply": true,
    /* Check that the arguments for `bind`, `call`, and `apply` methods match the original function. */
    "strictPropertyInitialization": true,
    /* Check for class properties that are declared but not set in the constructor. */
    "noImplicitThis": true,
    /* Enable error reporting when `this` is given the type `any`. */
    "useUnknownInCatchVariables": true,
    /* Type catch clause variables as 'unknown' instead of 'any'. */
    "alwaysStrict": true,
    /* Ensure 'use strict' is always emitted. */
    "noUnusedLocals": true,
    /* Enable error reporting when a local variables aren't read. */
    "noUnusedParameters": true,
    /* Raise an error when a function parameter isn't read */
    "noFallthroughCasesInSwitch": true,
    /* Enable error reporting for fallthrough cases in switch statements. */
    "noImplicitOverride": true,
    /* Ensure overriding members in derived classes are marked with an override modifier. */
    /* Module Resolution Options */
    "esModuleInterop": true,
    /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "allowSyntheticDefaultImports": true,
    /* Base directory to resolve non-absolute module names. */
    "baseUrl": "./",
    "skipLibCheck": true,
    "resolveJsonModule": true
  },
  "exclude": ["node_modules", "**/dist", "**/*.test.ts", "**/*.stories.tsx", "babel.config.js", "webpack.config.js"]
}
