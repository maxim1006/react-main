user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

#pid        logs/nginx.pid;
events
{
	#https://nginx.org/en/docs/ngx_core_module.html#worker_connections
	worker_connections 1024;
}

http
{
	# Remove server info from headers
	server_tokens off;

	include mime.types;
	default_type application/octet-stream;

	# Proxy cache settings
	proxy_cache_path /etc/nginx/cache levels=1:2 keys_zone=resources_cache:10m max_size=200m inactive=24h use_temp_path=off;
	proxy_cache_key "$scheme$request_method$host$request_uri$cookie_LANGUAGE";

	log_format custom ' $time_iso8601 '
	'"$request" $status $body_bytes_sent '
	'"$proxy_host$is_args$args" $upstream_addr'
	'"$http_referer" "$realpath_root" "$http_user_agent" '
	'"$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log custom;

	sendfile on;
	#tcp_nopush     on;

	#keepalive_timeout  0;
	keepalive_timeout 120;
	send_timeout 60;

	client_max_body_size 1m;
	large_client_header_buffers 4 8k;

	server
	{
		listen 80;

		server_tokens off;
		gzip_static on;
		gzip on;
		gzip_proxied any;
		gzip_comp_level 5;
		gzip_types application/x-javascript application/json application/javascript text/css image/jpeg image/png application/octet-stream;
		gzip_min_length 32;
		etag off;
		if_modified_since off;

		client_body_timeout 60;
		client_header_timeout 60;

		#add recommended headers
		add_header Referrer-Policy "strict-origin-when-cross-origin" always;
		add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload;" always;
		add_header X-Frame-Options "SAMEORIGIN" always;
		add_header X-Content-Type-Options "nosniff" always;
		add_header X-Xss-Protection "0" always;

		# отключить кеш
		#   add_header Pragma no-cache always;
		#   add_header Cache-Control no-store always;

        # gets confs
		include /etc/nginx/confs/add-headers.conf;

		# доп хедеры
		add_header Feature-Policy $add_header_feature_policy always;
		add_header Content-Security-Policy $add_header_content_security_policy always;

		#set proxy headers
		proxy_set_header Access-Control-Allow-Origin "*";
		proxy_set_header Access-Control-Allow-Methods "GET,PUT,POST,DELETE,OPTIONS";
		proxy_set_header Access-Control-Allow-Headers "Content-Type";

		server_name frontend;
		#
		#   error_page   500 502 503 504  /maintenance.html;
		#   location = /maintenance.html {
		#     root   /usr/share/nginx/html;
		#   }

		location ~ ^/api/v1(.*)
		{
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-NginX-Proxy true;
			proxy_pass http://backend:3000;
			proxy_ssl_session_reuse off;
			proxy_cache_bypass $http_upgrade;
			proxy_set_header Host $host;
			proxy_set_header Forwarded "";
			proxy_redirect off;
			proxy_hide_header X-Frame-Options;
			proxy_hide_header X-Powered-By;
			proxy_hide_header Server;
			proxy_cookie_path / "/; secure; HttpOnly";

			proxy_hide_header Cache-Control;
			proxy_hide_header Pragma;
			proxy_hide_header Referrer-Policy;
			proxy_hide_header Content-Security-Policy;

			set $dr_no_redirect "true";
		}

		location ~* \.(ico|css|gif|jpe?g|png|js|json|woff|woff2|xliff)$
		{
			expires 30d;
			add_header Pragma public;
			add_header Cache-Control "public, max-age=31536000";
			add_header X-XSS-Protection "1; mode=block";
			add_header X-Content-Type-Options nosniff;
			root /usr/share/nginx/html;
		}

		location /
		{
			# This would be the directory where your React app's static files are stored at
			root /usr/share/nginx/html;
			# в конце стоит не /404.html а /index.html чтобы сделать проксирование на index.html в spa
			try_files $uri $uri$args $uri$args/ $uri/ /index.html;
		}
	}
}
