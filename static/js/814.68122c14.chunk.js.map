{"version":3,"file":"static/js/814.68122c14.chunk.js","mappings":"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","sources":["components/tabs/Tabs.js","components/posts-and-users/PostsAndUsers.js","components/post/Post.js","components/post/PostUser.js","components/post/PostList.js","components/song/Song.js","components/song/SongDetails.js","components/song/SongList.js","components/framework/Framework.js","components/framework/FrameworkList.js","components/counter/counter-store.component.tsx","components/counter/counters.component.tsx","components/redux-saga/intro/redux-saga-intro.component.js","components/redux-saga/family/family-saga.component.js","components/redux-saga/counter/saga-counter.component.js","components/redux-saga/redux-saga.component.js","components/redux/Redux.js","pages/ReduxPage.js"],"sourcesContent":["import { Component, Children } from 'react';\nimport './Tabs.scss';\n\nexport class TabsComponent extends Component {\n    state = {\n        activeTab: 0,\n    };\n\n    componentDidMount() {\n        const { activeTab } = this.props;\n\n        if (activeTab !== undefined) {\n            this.setState({ activeTab });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n\n        if (children) {\n            const tabsHeader = [];\n            const tabsBody = [];\n\n            // вспомогательная функция для работы с чайлдами\n            Children.map(children, (child, index) => {\n                tabsHeader.push(this.getTabsHeaderView(child, index));\n                tabsBody.push(this.getTabsBody(child, index));\n            });\n\n            return (\n                <div className='tabs'>\n                    <div className='tabs__header'>{tabsHeader}</div>\n                    <div className='tabs__content'>{tabsBody}</div>\n                </div>\n            );\n        }\n    }\n\n    getTabsHeaderView(child, index) {\n        return (\n            <div\n                onClick={this.onClick.bind(this, index)}\n                key={crypto.randomUUID()}\n                className={`tabs__header-item${index === this.state.activeTab ? ' _active' : ''}`}\n            >\n                {child.props.tabName}\n            </div>\n        );\n    }\n\n    getTabsBody(child, index) {\n        if (index === this.state.activeTab) {\n            return (\n                <div className='tabs__content-item' key={index}>\n                    {child.props.children}\n                </div>\n            );\n        }\n        return '';\n    }\n\n    onClick = index => {\n        // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n        // через функцию это делаю\n        this.setState((prevState, prevProps) => ({\n            activeTab: index,\n        }));\n    };\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPostsAndUsers } from '@app/old_store/actions';\nimport './PostsAndUsers.scss';\n\nclass PostsAndUsers extends Component {\n    componentDidMount() {\n        const { fetchPostsAndUsers } = this.props;\n\n        fetchPostsAndUsers();\n    }\n\n    getAuthorContent(user) {\n        if (!user) {\n            return <div>Loading</div>;\n        }\n\n        const { name: userName } = user;\n\n        return (\n            <p>\n                <b>Author</b>:{userName}\n            </p>\n        );\n    }\n\n    render() {\n        const { posts, users } = this.props;\n\n        return (\n            <ul>\n                {posts.map(({ title, id, body, userId }) => {\n                    return (\n                        <li key={id} className='posts-and-users__item'>\n                            <p>\n                                <b>Post title:</b>\n                                {title}\n                            </p>\n                            <p>\n                                <b>Post body:</b>\n                                {body}\n                            </p>\n                            {this.getAuthorContent(users[userId])}\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts,\n    users: state.users.users,\n});\n\nexport default connect(mapStateToProps, {\n    fetchPostsAndUsers,\n})(PostsAndUsers);\n","export default function Post({ title, body, index }) {\n    return (\n        <div>\n            <h3>\n                Post:\n                {index}\n            </h3>\n            <p>\n                <b>{title}</b>\n            </p>\n            <p>{body}</p>\n        </div>\n    );\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserById } from '@app/old_store/actions';\n\nclass PostUser extends Component {\n    componentDidMount() {\n        this.props.fetchUserById(this.props.userId);\n    }\n\n    render() {\n        const { user } = this.props;\n\n        if (!user) {\n            return null;\n        }\n\n        const { name } = user;\n\n        return (\n            <div>\n                <i>Author:</i> {name}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, { userId }) => ({\n    user: findUser(state, userId),\n});\n\nexport default connect(mapStateToProps, { fetchUserById })(PostUser);\n\n// Helpers\nfunction findUser(state, userId) {\n    // если использую фильтр то рендер функция вызовется 10 раз по 10 раз\n    // return state.users.filter(user => user.id === userId);\n\n    // а так только 20\n    return state.users.users[userId];\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '@app/old_store/actions';\nimport Post from './Post';\nimport PostUser from './PostUser';\n\nclass PostList extends Component {\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    render() {\n        const { posts } = this.props;\n\n        return (\n            <ul>\n                {posts.map((post, index) => {\n                    return (\n                        <li key={post.id}>\n                            <Post {...post} index={index} />\n                            <PostUser userId={post.userId} />\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    posts: state.posts,\n});\n\nexport default connect(mapStateToProps, { fetchPosts })(PostList);\n","import './Song.scss';\n\nexport default function Song({ title, selected, onSelect }) {\n    const style = selected ? { backgroundColor: 'lightblue' } : null;\n\n    return (\n        <div className='song' style={style}>\n            <div>\n                Title:\n                {title}\n            </div>\n\n            <button onClick={onSelect.bind(this, title)} type='button'>\n                Get Details\n            </button>\n        </div>\n    );\n}\n","import { connect } from 'react-redux';\n\nfunction SongDetails({ selectedSong }) {\n    if (selectedSong) {\n        const { title, duration, likes } = selectedSong.song;\n\n        return (\n            <>\n                <h4>Details</h4>\n                <p>\n                    Title:\n                    {title}\n                </p>\n                <p>\n                    Duration:\n                    {duration}\n                </p>\n                <p>\n                    Likes:\n                    {likes}\n                </p>\n            </>\n        );\n    }\n    return (\n        <>\n            <h4>Details</h4>\n            <p>No Selected song</p>\n        </>\n    );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    selectedSong: state.selectedSong,\n});\n\nexport default connect(mapStateToProps)(SongDetails);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Song from './Song';\nimport { selectSong } from '@app/old_store/actions';\nimport SongDetails from './SongDetails';\n\nclass SongList extends Component {\n    // проперти автоматом биндятся\n    // в this.props добавится объект mapStateToProps()\n    render() {\n        // console.log(this.props);\n        return (\n            <>\n                <h3>Songs:</h3>\n                <ul className='song-list'>{this.getSongsList()}</ul>\n                <SongDetails />\n            </>\n        );\n    }\n\n    getSongsList() {\n        const { songs, selectedSong, selectSong } = this.props;\n\n        return songs.map((song, index) => {\n            const isSelected = selectedSong ? selectedSong.song.title === song.title : null;\n\n            return (\n                <li key={crypto.randomUUID()}>\n                    <Song {...song} selected={isSelected} onSelect={selectSong.bind(this, song)} />\n                </li>\n            );\n        });\n    }\n}\n\n// вызывается с полным стейтом\nconst mapStateToProps = (state, ownProps) => ({\n    songs: state.songs,\n    selectedSong: state.selectedSong,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    selectSong: song => {\n        // console.log(ownProps);\n        dispatch(selectSong(song));\n    },\n});\n\n// могу забиндить на возвращаемый эвент из Song сразу action, для этого надо вернуть объект\n// export default connect(mapStateToProps, {selectSong})(SongList);\n\n// могу предобработать mapDispatchToProps с помощью доп функций, selectSong также попадет в пропсы,\n// но при этом не вызовет action\nexport default connect(mapStateToProps, mapDispatchToProps)(SongList);\n","export default function Framework({ name, progress, onChange }) {\n    return (\n        <div className='framework'>\n            <p>\n                Name:\n                {name}\n            </p>\n            <label>\n                Progress:\n                <input\n                    type='checkbox'\n                    checked={progress === 'done'}\n                    onChange={onChange}\n                    ref={el => el && (el.indeterminate = progress === 'indeterminate')}\n                />\n            </label>\n        </div>\n    );\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Framework from './Framework';\nimport * as fromActions from '../../old_store/actions';\n\nclass FrameworkList extends Component {\n    componentDidMount() {\n        this.props.fetchFrameworks();\n    }\n\n    getFrameworkList() {\n        const { frameworks, changeFrameworkStatus } = this.props;\n\n        return frameworks.map(framework => {\n            return (\n                <li key={crypto.randomUUID()}>\n                    <Framework onChange={changeFrameworkStatus.bind(this, framework)} {...framework} />\n                </li>\n            );\n        });\n    }\n\n    render() {\n        return <ul>{this.getFrameworkList()}</ul>;\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    frameworks: state.frameworks,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    // обращаю внимание что тут fetchFrameworks а не fetchFrameworks(), тем самым могу в action не писать\n    // доп функцию обертку\n    fetchFrameworks: () => dispatch(fromActions.fetchFrameworks),\n    changeFrameworkStatus: framework => {\n        switch (framework.progress) {\n            case 'done': {\n                framework.progress = null;\n                break;\n            }\n            case 'indeterminate': {\n                framework.progress = 'done';\n                break;\n            }\n            default: {\n                framework.progress = 'indeterminate';\n                break;\n            }\n        }\n\n        dispatch(fromActions.changeFrameworkStatus(framework));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FrameworkList);\n","import { FC, memo, useEffect, useState } from 'react';\nimport { COUNTER_TYPES } from '@app/old_store/actions/types';\n\n// Create store\nconst createStore = (reducer: Function) => {\n    let state: number;\n    // так как сабскрайб может вызывааться несколько раз, должны хранить все вызовы\n    const listeners: any[] = [];\n\n    const getState = () => state;\n\n    const dispatch = (action: { type?: string }) => {\n        // каждый раз когда происходит диспач нужно апдейтить стейт\n        state = reducer(state, action);\n        // и вызывать всех слушателей\n        listeners.forEach(listener => listener());\n    };\n\n    const subscribe = (listener: () => void) => {\n        listeners.push(listener);\n\n        // возвращать функцию unsubscribe которая удаляет слушателя из массива всех слушателей\n        return () => listeners.filter(l => l !== listener);\n    };\n\n    // диспатчим первый раз чтобы редьюсер вернул initial value\n    dispatch({});\n\n    return { getState, dispatch, subscribe };\n};\n\n// Reducer\nconst counterReducer = (state = 0, action: { type: string }) => {\n    switch (action.type) {\n        case COUNTER_TYPES.INCREMENT: {\n            return ++state;\n        }\n\n        case COUNTER_TYPES.DECREMENT: {\n            return --state;\n        }\n\n        default:\n            return state;\n    }\n};\n\n// Create store\nconst store = createStore(counterReducer);\n\nconst CounterStore: FC = () => {\n    const [value, setValue] = useState(store.getState());\n\n    useEffect(() => {\n        const storeUnsubscribe = store.subscribe(() => {\n            setValue(store.getState());\n        });\n\n        return () => {\n            storeUnsubscribe();\n        };\n    }, []);\n\n    return (\n        <>\n            <p>{value}</p>\n            <button onClick={() => store.dispatch({ type: COUNTER_TYPES.INCREMENT })}>Increment</button>\n            <button onClick={() => store.dispatch({ type: COUNTER_TYPES.DECREMENT })}>Decrement</button>\n        </>\n    );\n};\n\nexport default memo(CounterStore);\n","import { FC, memo } from 'react';\nimport CounterStore from './counter-store.component';\n\nconst Counters: FC = () => {\n    return (\n        <>\n            <CounterStore />\n            {/* <Counter/>*/}\n            {/* <CounterWithMapDispatchToProps/>*/}\n            {/* <CounterWithMapDispatchToPropsFunc/>*/}\n        </>\n    );\n};\n\nexport default memo(Counters);\n","import { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sagaGetUserStartAction } from '@app/old_store/actions';\nimport MaterialLoaderComponent from '../../loader/MaterialLoader';\n\nconst ReduxSagaIntroComponent = () => {\n    const dispatch = useDispatch();\n    const users = useSelector(state => state.saga);\n\n    return (\n        <>\n            <button type='button' onClick={() => dispatch(sagaGetUserStartAction())}>\n                Get user\n            </button>\n            {users.loading && <MaterialLoaderComponent />}\n            {!users.loading &&\n                users?.entities?.users?.length &&\n                users?.entities?.users.map(({ id, name }) => {\n                    return <div key={id}>{name}</div>;\n                })}\n        </>\n    );\n};\n\nexport default memo(ReduxSagaIntroComponent);\n","import { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getFamilyAction } from '@app/old_store/actions';\n\nconst FamilySagaComponent = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <button type='button' onClick={() => dispatch(getFamilyAction())}>\n            Get family\n        </button>\n    );\n};\n\nexport default memo(FamilySagaComponent);\n","import { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SAGA_TYPES } from '@app/old_store/actions/types';\n\nconst SagaCounterComponent = () => {\n    const sagaState = useSelector(state => state.saga);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            {sagaState.counter}\n            <button type='button' onClick={() => dispatch({ type: SAGA_TYPES.INCREMENT_COUNTER })}>\n                Increment counter\n            </button>\n            <button type='button' onClick={() => dispatch({ type: SAGA_TYPES.DECREMENT_COUNTER })}>\n                Decrement counter\n            </button>\n        </>\n    );\n};\n\nexport default memo(SagaCounterComponent);\n","import { memo } from 'react';\nimport { TabsComponent } from '../tabs/Tabs';\nimport ReduxSagaIntroComponent from './intro/redux-saga-intro.component';\nimport FamilySagaComponent from './family/family-saga.component';\nimport SagaCounterComponent from './counter/saga-counter.component';\n\nconst ReduxSaga = () => {\n    return (\n        <TabsComponent>\n            <div tabName='Counter'>\n                <SagaCounterComponent />\n            </div>\n            <div tabName='Intro'>\n                <ReduxSagaIntroComponent />\n            </div>\n            <div tabName='Family'>\n                <FamilySagaComponent />\n            </div>\n        </TabsComponent>\n    );\n};\n\nexport default memo(ReduxSaga);\n","import { Component } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport PostsAndUsers from '../posts-and-users/PostsAndUsers';\nimport PostList from '../post/PostList';\nimport SongList from '../song/SongList';\nimport FrameworkList from '../framework/FrameworkList';\nimport MainMenu from '../menu/MainMenu';\nimport Counters from '../counter/counters.component';\nimport ReduxSaga from '../redux-saga/redux-saga.component';\n\nexport class ReduxComponent extends Component {\n    render() {\n        return (\n            <>\n                <MainMenu\n                    exact\n                    routes={[\n                        { to: '/redux', title: 'Sagas' },\n                        { to: '/redux/todos', title: 'Todos' },\n                        { to: '/redux/counters', title: 'Counters' },\n                        { to: '/redux/song-list', title: 'SongList' },\n                        {\n                            to: '/redux/posts-and-users',\n                            title: 'PostsAndUsers',\n                        },\n                        { to: '/redux/post-list', title: 'PostList' },\n                        { to: '/redux/framework-list', title: 'FrameworkList' },\n                        { to: '/redux/user-list', title: 'UserList' },\n                    ]}\n                />\n\n                <Routes>\n                    <Route path='/redux' element={<ReduxSaga />} />\n                    <Route path='/redux/counters' element={<Counters />} />\n                    <Route path='/redux/song-list' element={<SongList />} />\n                    <Route path='/redux/posts-and-users' element={<PostsAndUsers />} />\n                    <Route path='/redux/post-list' element={<PostList />} />\n                    <Route path='/redux/framework-list' element={<FrameworkList />} />\n                </Routes>\n            </>\n        );\n    }\n}\n","import React, { memo } from 'react';\nimport { ReduxComponent } from '../components/redux/Redux';\n\nexport default memo(() => {\n    return <ReduxComponent />;\n});\n"],"names":["TabsComponent","Component","constructor","arguments","state","activeTab","onClick","index","this","setState","prevState","prevProps","componentDidMount","props","undefined","render","children","tabsHeader","tabsBody","Children","map","child","push","getTabsHeaderView","getTabsBody","_jsxs","className","_jsx","bind","concat","tabName","crypto","randomUUID","PostsAndUsers","fetchPostsAndUsers","getAuthorContent","user","name","userName","posts","users","_ref","title","id","body","userId","connect","Post","PostUser","fetchUserById","mapStateToProps","findUser","PostList","fetchPosts","post","ownProps","Song","selected","onSelect","style","backgroundColor","type","selectedSong","duration","likes","song","_Fragment","SongList","getSongsList","SongDetails","songs","selectSong","isSelected","mapDispatchToProps","dispatch","Framework","progress","onChange","checked","ref","el","indeterminate","FrameworkList","fetchFrameworks","getFrameworkList","frameworks","changeFrameworkStatus","framework","fromActions","store","reducer","listeners","action","forEach","listener","getState","subscribe","filter","l","createStore","length","COUNTER_TYPES","INCREMENT","DECREMENT","CounterStore","value","setValue","useState","useEffect","storeUnsubscribe","memo","Counters","ReduxSagaIntroComponent","_users$entities","_users$entities$users","_users$entities2","useDispatch","useSelector","saga","sagaGetUserStartAction","loading","MaterialLoaderComponent","entities","FamilySagaComponent","getFamilyAction","SagaCounterComponent","sagaState","counter","SAGA_TYPES","INCREMENT_COUNTER","DECREMENT_COUNTER","ReduxSaga","ReduxComponent","MainMenu","exact","routes","to","Routes","Route","path","element"],"sourceRoot":""}