{"version":3,"file":"static/js/576.2a12422a.chunk.js","mappings":"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","sources":["context/LanguageContext.js","components/context/test/context-button.component.tsx","components/context/test/context-field.component.tsx","components/context/test/context-create.component.tsx","components/context/test/ContextTest.js","webpack://react-main/./src/components/component/component.module.scss?6464","components/component/component.component.tsx","components/context/OutsideChangeContext.js","components/context/outside-change/OutsideChangeContextInner.js","components/context/outside-change/OutsideChangeContextWrapper.js","pages/ContextPage.js"],"sourcesContent":["import React from 'react';\n\nexport default React.createContext('ru');\n","import { memo, useContext } from 'react';\nimport LanguageContext from '@app/context/LanguageContext';\n\ntype ContextButtonProps = {};\n\nconst ContextButton = memo<ContextButtonProps>(function ContextButton() {\n    const language = useContext(LanguageContext);\n    const text = language === 'en' ? 'Submit' : 'Подтвердить';\n\n    return <button type='button'>{text}</button>;\n});\n\nexport default ContextButton;\n// раньше надо было делать через класс или consumer но с 16.8 можно использовать useContext\n// export default class ContextButton extends Component {\n//     static contextType = LanguageContext;\n//\n//     render() {\n//         console.log(this.context);\n//\n//         const text = this.context === \"en\" ? \"Submit\" : \"Подтвердить\";\n//\n//         return (\n//             <button type=\"button\">{text}</button>\n//         );\n//     }\n// }\n\n// вариант как делалось раньше через LanguageContext.Consumer\n// export default () => {\n//     return (\n//         <button type=\"button\">\n//             <LanguageContext.Consumer>\n//                 {(value) => value === \"en\" ? \"Submit\" : \"Подтвердить\"}\n//             </LanguageContext.Consumer>\n//\n//         </button>\n//     );\n// }\n","import { memo, useContext } from 'react';\nimport LanguageContext from '@app/context/LanguageContext';\n\ntype ContextFieldProps = {};\n\nconst ContextField = memo<ContextFieldProps>(function ContextField() {\n    const language = useContext(LanguageContext);\n    const label = language === 'en' ? 'Name' : 'Имя';\n\n    return (\n        <p>\n            <label htmlFor='contextFieldName'>{label}</label>\n            <input type='text' id='contextFieldName' />\n        </p>\n    );\n});\n\nexport default ContextField;\n","import { memo } from 'react';\nimport ContextButton from '@app/components/context/test/context-button.component';\nimport ContextField from '@app/components/context/test/context-field.component';\n\ntype ContextCreateProps = {};\n\nconst ContextCreate = memo<ContextCreateProps>(function ContextCreate() {\n    return (\n        <div>\n            <ContextField />\n            <ContextButton />\n        </div>\n    );\n});\n\nexport default ContextCreate;\n","import { Component } from 'react';\nimport './ContextTest.scss';\nimport LanguageContext from '../../../context/LanguageContext';\nimport ContextCreate from '@app/components/context/test/context-create.component';\n\nexport default class ContextTest extends Component {\n    state = {\n        language: 'en',\n    };\n\n    render() {\n        return (\n            <div className='context-test'>\n                Select language:\n                <a className='context-test__link' href='/' onClick={this.onLanguageChange.bind(this, 'en')}>\n                    en\n                </a>\n                <a className='context-test__link' href='/' onClick={this.onLanguageChange.bind(this, 'ru')}>\n                    ru\n                </a>\n                <LanguageContext.Provider value={this.state.language}>\n                    <ContextCreate />\n                </LanguageContext.Provider>\n            </div>\n        );\n    }\n\n    onLanguageChange = (language, event) => {\n        event.preventDefault();\n\n        this.setState({\n            language,\n        });\n    };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_component__kuoNT\"};","import React, { memo, FC, PropsWithChildren } from 'react';\nimport cn from 'classnames';\nimport styles from './component.module.scss';\n\ntype ComponentProps = {\n    title: string;\n};\n\nconst Component: FC<PropsWithChildren<ComponentProps>> = ({ title, children }) => {\n    return (\n        <div className={cn(styles.host, 'taComponent')}>\n            <h3 className={styles.title}>{title}</h3>\n            <div className={styles.body}>{children}</div>\n        </div>\n    );\n};\n\nexport default memo(Component);\n","import React from 'react';\n\nexport default React.createContext({ value: {}, setValue: () => {} });\n","import { memo, useContext } from 'react';\nimport OutsideChangeContext from '@app/components/context/OutsideChangeContext';\n\nexport default memo(() => {\n    const { setValue, value } = useContext(OutsideChangeContext);\n\n    return (\n        <>\n            Context value: {JSON.stringify(value)}\n            <select name='outsideContextSelect' onChange={setValue}>\n                <option value='1'>1</option>\n                <option value='2'>2</option>\n                <option value='3'>3</option>\n            </select>\n        </>\n    );\n});\n","import { memo, useState } from 'react';\nimport OutsideChangeContextInner from './OutsideChangeContextInner';\nimport OutsideChangeContext from '../OutsideChangeContext';\n\nexport default memo(() => {\n    const [contextValue, setContextValue] = useState(null);\n\n    const setValue = event => {\n        setContextValue(event.target.value);\n    };\n\n    return (\n        <OutsideChangeContext.Provider value={{ value: contextValue, setValue }}>\n            <OutsideChangeContextInner />\n        </OutsideChangeContext.Provider>\n    );\n});\n","import React, { memo } from 'react';\nimport ContextTest from '../components/context/test/ContextTest';\nimport Component from '../components/component/component.component';\nimport OutsideChangeContextWrapper from '../components/context/outside-change/OutsideChangeContextWrapper';\n\nexport default memo(() => {\n    return (\n        <>\n            <Component title='OusideChange'>\n                <OutsideChangeContextWrapper />\n            </Component>\n\n            <Component title='Language example'>\n                <ContextTest />\n            </Component>\n        </>\n    );\n});\n"],"names":["React","memo","text","useContext","LanguageContext","_jsx","type","children","label","_jsxs","htmlFor","id","ContextField","ContextButton","ContextTest","Component","constructor","arguments","state","language","onLanguageChange","event","preventDefault","this","setState","render","className","href","onClick","bind","Provider","value","ContextCreate","_ref","title","cn","styles","host","body","setValue","OutsideChangeContext","_Fragment","JSON","stringify","name","onChange","contextValue","setContextValue","useState","target","OutsideChangeContextInner","OutsideChangeContextWrapper"],"sourceRoot":""}