{"version":3,"file":"static/js/857.6e4c02aa.chunk.js","mappings":"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","sources":["webpack://react-main/./src/components/component/component.module.scss?6464","components/component/component.component.tsx","context/LanguageContext.js","components/context/test/context-button.component.tsx","components/context/test/context-field.component.tsx","components/context/test/context-create.component.tsx","components/context/test/ContextTest.js","components/context/OutsideChangeContext.js","components/context/outside-change/OutsideChangeContextInner.js","components/context/outside-change/OutsideChangeContextWrapper.js","pages/ContextPage.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"component\":\"component_component__kuoNT\"};","import React, { memo, FC, PropsWithChildren } from 'react';\nimport cn from 'classnames';\nimport styles from './component.module.scss';\n\ntype ComponentProps = {\n    title: string;\n};\n\nconst Component: FC<PropsWithChildren<ComponentProps>> = ({ title, children }) => {\n    return (\n        <div className={cn(styles.host, 'taComponent')}>\n            <h3 className={styles.title}>{title}</h3>\n            <div className={styles.body}>{children}</div>\n        </div>\n    );\n};\n\nexport default memo(Component);\n","import React from 'react';\n\nexport default React.createContext('ru');\n","import { memo, useContext } from 'react';\nimport LanguageContext from '@app/context/LanguageContext';\n\ntype ContextButtonProps = {};\n\nconst ContextButton = memo<ContextButtonProps>(function ContextButton() {\n    const language = useContext(LanguageContext);\n    const text = language === 'en' ? 'Submit' : 'Подтвердить';\n\n    return <button type='button'>{text}</button>;\n});\n\nexport default ContextButton;\n// раньше надо было делать через класс или consumer но с 16.8 можно использовать useContext\n// export default class ContextButton extends Component {\n//     static contextType = LanguageContext;\n//\n//     render() {\n//         console.log(this.context);\n//\n//         const text = this.context === \"en\" ? \"Submit\" : \"Подтвердить\";\n//\n//         return (\n//             <button type=\"button\">{text}</button>\n//         );\n//     }\n// }\n\n// вариант как делалось раньше через LanguageContext.Consumer\n// export default () => {\n//     return (\n//         <button type=\"button\">\n//             <LanguageContext.Consumer>\n//                 {(value) => value === \"en\" ? \"Submit\" : \"Подтвердить\"}\n//             </LanguageContext.Consumer>\n//\n//         </button>\n//     );\n// }\n","import { memo, useContext } from 'react';\nimport LanguageContext from '@app/context/LanguageContext';\n\ntype ContextFieldProps = {};\n\nconst ContextField = memo<ContextFieldProps>(function ContextField() {\n    const language = useContext(LanguageContext);\n    const label = language === 'en' ? 'Name' : 'Имя';\n\n    return (\n        <p>\n            <label htmlFor='contextFieldName'>{label}</label>\n            <input type='text' id='contextFieldName' />\n        </p>\n    );\n});\n\nexport default ContextField;\n","import { memo } from 'react';\nimport ContextButton from '@app/components/context/test/context-button.component';\nimport ContextField from '@app/components/context/test/context-field.component';\n\ntype ContextCreateProps = {};\n\nconst ContextCreate = memo<ContextCreateProps>(function ContextCreate() {\n    return (\n        <div>\n            <ContextField />\n            <ContextButton />\n        </div>\n    );\n});\n\nexport default ContextCreate;\n","import { Component } from 'react';\nimport './ContextTest.scss';\nimport LanguageContext from '../../../context/LanguageContext';\nimport ContextCreate from '@app/components/context/test/context-create.component';\n\nexport default class ContextTest extends Component {\n    state = {\n        language: 'en',\n    };\n\n    render() {\n        return (\n            <div className='context-test'>\n                Select language:\n                <a className='context-test__link' href='/' onClick={this.onLanguageChange.bind(this, 'en')}>\n                    en\n                </a>\n                <a className='context-test__link' href='/' onClick={this.onLanguageChange.bind(this, 'ru')}>\n                    ru\n                </a>\n                <LanguageContext.Provider value={this.state.language}>\n                    <ContextCreate />\n                </LanguageContext.Provider>\n            </div>\n        );\n    }\n\n    onLanguageChange = (language, event) => {\n        event.preventDefault();\n\n        this.setState({\n            language,\n        });\n    };\n}\n","import React from 'react';\n\nexport default React.createContext({ value: {}, setValue: () => {} });\n","import { memo, useContext } from 'react';\nimport OutsideChangeContext from '@app/components/context/OutsideChangeContext';\n\nexport default memo(() => {\n    const { setValue, value } = useContext(OutsideChangeContext);\n\n    return (\n        <>\n            Context value: {JSON.stringify(value)}\n            <select name='outsideContextSelect' onChange={setValue}>\n                <option value='1'>1</option>\n                <option value='2'>2</option>\n                <option value='3'>3</option>\n            </select>\n        </>\n    );\n});\n","import { memo, useState } from 'react';\nimport OutsideChangeContextInner from './OutsideChangeContextInner';\nimport OutsideChangeContext from '../OutsideChangeContext';\n\nexport default memo(() => {\n    const [contextValue, setContextValue] = useState(null);\n\n    const setValue = event => {\n        setContextValue(event.target.value);\n    };\n\n    return (\n        <OutsideChangeContext.Provider value={{ value: contextValue, setValue }}>\n            <OutsideChangeContextInner />\n        </OutsideChangeContext.Provider>\n    );\n});\n","import React, { memo } from 'react';\nimport ContextTest from '../components/context/test/ContextTest';\nimport Component from '../components/component/component.component';\nimport OutsideChangeContextWrapper from '../components/context/outside-change/OutsideChangeContextWrapper';\n\nexport default memo(() => {\n    return (\n        <>\n            <Component title='OusideChange'>\n                <OutsideChangeContextWrapper />\n            </Component>\n\n            <Component title='Language example'>\n                <ContextTest />\n            </Component>\n        </>\n    );\n});\n"],"names":["Component","_ref","title","children","_jsxs","className","cn","styles","host","_jsx","body","memo","React","text","useContext","LanguageContext","type","label","htmlFor","id","ContextField","ContextButton","ContextTest","constructor","arguments","state","language","onLanguageChange","event","preventDefault","this","setState","render","href","onClick","bind","Provider","value","ContextCreate","setValue","OutsideChangeContext","_Fragment","JSON","stringify","name","onChange","contextValue","setContextValue","useState","target","OutsideChangeContextInner","OutsideChangeContextWrapper"],"sourceRoot":""}