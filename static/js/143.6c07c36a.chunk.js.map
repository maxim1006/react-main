{"version":3,"file":"static/js/143.6c07c36a.chunk.js","mappings":"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","sources":["components/tabs/Tabs.js","components/posts-and-users/PostsAndUsers.js","components/post/Post.js","components/post/PostUser.js","components/post/PostList.js","components/song/Song.js","components/song/SongDetails.js","components/song/SongList.js","components/framework/Framework.js","components/framework/FrameworkList.js","components/counter/counter-store.component.tsx","components/counter/counters.component.tsx","components/redux-saga/intro/redux-saga-intro.component.js","components/redux-saga/family/family-saga.component.js","components/redux-saga/counter/saga-counter.component.js","components/redux-saga/redux-saga.component.js","components/redux/Redux.js","pages/ReduxPage.js"],"sourcesContent":["import { Component, Children } from 'react';\nimport './Tabs.scss';\n\nexport class TabsComponent extends Component {\n    state = {\n        activeTab: 0,\n    };\n\n    componentDidMount() {\n        const { activeTab } = this.props;\n\n        if (activeTab !== undefined) {\n            this.setState({ activeTab });\n        }\n    }\n\n    render() {\n        const { children } = this.props;\n\n        if (children) {\n            const tabsHeader = [];\n            const tabsBody = [];\n\n            // вспомогательная функция для работы с чайлдами\n            Children.map(children, (child, index) => {\n                tabsHeader.push(this.getTabsHeaderView(child, index));\n                tabsBody.push(this.getTabsBody(child, index));\n            });\n\n            return (\n                <div className='tabs'>\n                    <div className='tabs__header'>{tabsHeader}</div>\n                    <div className='tabs__content'>{tabsBody}</div>\n                </div>\n            );\n        }\n    }\n\n    getTabsHeaderView(child, index) {\n        return (\n            <div\n                onClick={this.onClick.bind(this, index)}\n                key={crypto.randomUUID()}\n                className={`tabs__header-item${index === this.state.activeTab ? ' _active' : ''}`}\n            >\n                {child.props.tabName}\n            </div>\n        );\n    }\n\n    getTabsBody(child, index) {\n        if (index === this.state.activeTab) {\n            return (\n                <div className='tabs__content-item' key={index}>\n                    {child.props.children}\n                </div>\n            );\n        }\n        return '';\n    }\n\n    onClick = index => {\n        // Если вдруг захочу в процессе апдейта стейта использовать стейт или проперти, обязательно\n        // через функцию это делаю\n        this.setState((prevState, prevProps) => ({\n            activeTab: index,\n        }));\n    };\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPostsAndUsers } from '@app/old_store/actions';\nimport './PostsAndUsers.scss';\n\nclass PostsAndUsers extends Component {\n    componentDidMount() {\n        const { fetchPostsAndUsers } = this.props;\n\n        fetchPostsAndUsers();\n    }\n\n    getAuthorContent(user) {\n        if (!user) {\n            return <div>Loading</div>;\n        }\n\n        const { name: userName } = user;\n\n        return (\n            <p>\n                <b>Author</b>:{userName}\n            </p>\n        );\n    }\n\n    render() {\n        const { posts, users } = this.props;\n\n        return (\n            <ul>\n                {posts.map(({ title, id, body, userId }) => {\n                    return (\n                        <li key={id} className='posts-and-users__item'>\n                            <p>\n                                <b>Post title:</b>\n                                {title}\n                            </p>\n                            <p>\n                                <b>Post body:</b>\n                                {body}\n                            </p>\n                            {this.getAuthorContent(users[userId])}\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    posts: state.posts,\n    users: state.users.users,\n});\n\nexport default connect(mapStateToProps, {\n    fetchPostsAndUsers,\n})(PostsAndUsers);\n","export default function Post({ title, body, index }) {\n    return (\n        <div>\n            <h3>\n                Post:\n                {index}\n            </h3>\n            <p>\n                <b>{title}</b>\n            </p>\n            <p>{body}</p>\n        </div>\n    );\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchUserById } from '@app/old_store/actions';\n\nclass PostUser extends Component {\n    componentDidMount() {\n        this.props.fetchUserById(this.props.userId);\n    }\n\n    render() {\n        const { user } = this.props;\n\n        if (!user) {\n            return null;\n        }\n\n        const { name } = user;\n\n        return (\n            <div>\n                <i>Author:</i> {name}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state, { userId }) => ({\n    user: findUser(state, userId),\n});\n\nexport default connect(mapStateToProps, { fetchUserById })(PostUser);\n\n// Helpers\nfunction findUser(state, userId) {\n    // если использую фильтр то рендер функция вызовется 10 раз по 10 раз\n    // return state.users.filter(user => user.id === userId);\n\n    // а так только 20\n    return state.users.users[userId];\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { fetchPosts } from '@app/old_store/actions';\nimport Post from './Post';\nimport PostUser from './PostUser';\n\nclass PostList extends Component {\n    componentDidMount() {\n        this.props.fetchPosts();\n    }\n\n    render() {\n        const { posts } = this.props;\n\n        return (\n            <ul>\n                {posts.map((post, index) => {\n                    return (\n                        <li key={post.id}>\n                            <Post {...post} index={index} />\n                            <PostUser userId={post.userId} />\n                        </li>\n                    );\n                })}\n            </ul>\n        );\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    posts: state.posts,\n});\n\nexport default connect(mapStateToProps, { fetchPosts })(PostList);\n","import './Song.scss';\n\nexport default function Song({ title, selected, onSelect }) {\n    const style = selected ? { backgroundColor: 'lightblue' } : null;\n\n    return (\n        <div className='song' style={style}>\n            <div>\n                Title:\n                {title}\n            </div>\n\n            <button onClick={onSelect.bind(this, title)} type='button'>\n                Get Details\n            </button>\n        </div>\n    );\n}\n","import { connect } from 'react-redux';\n\nfunction SongDetails({ selectedSong }) {\n    if (selectedSong) {\n        const { title, duration, likes } = selectedSong.song;\n\n        return (\n            <>\n                <h4>Details</h4>\n                <p>\n                    Title:\n                    {title}\n                </p>\n                <p>\n                    Duration:\n                    {duration}\n                </p>\n                <p>\n                    Likes:\n                    {likes}\n                </p>\n            </>\n        );\n    }\n    return (\n        <>\n            <h4>Details</h4>\n            <p>No Selected song</p>\n        </>\n    );\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    selectedSong: state.selectedSong,\n});\n\nexport default connect(mapStateToProps)(SongDetails);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Song from './Song';\nimport { selectSong } from '@app/old_store/actions';\nimport SongDetails from './SongDetails';\n\nclass SongList extends Component {\n    // проперти автоматом биндятся\n    // в this.props добавится объект mapStateToProps()\n    render() {\n        // console.log(this.props);\n        return (\n            <>\n                <h3>Songs:</h3>\n                <ul className='song-list'>{this.getSongsList()}</ul>\n                <SongDetails />\n            </>\n        );\n    }\n\n    getSongsList() {\n        const { songs, selectedSong, selectSong } = this.props;\n\n        return songs.map((song, index) => {\n            const isSelected = selectedSong ? selectedSong.song.title === song.title : null;\n\n            return (\n                <li key={crypto.randomUUID()}>\n                    <Song {...song} selected={isSelected} onSelect={selectSong.bind(this, song)} />\n                </li>\n            );\n        });\n    }\n}\n\n// вызывается с полным стейтом\nconst mapStateToProps = (state, ownProps) => ({\n    songs: state.songs,\n    selectedSong: state.selectedSong,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    selectSong: song => {\n        // console.log(ownProps);\n        dispatch(selectSong(song));\n    },\n});\n\n// могу забиндить на возвращаемый эвент из Song сразу action, для этого надо вернуть объект\n// export default connect(mapStateToProps, {selectSong})(SongList);\n\n// могу предобработать mapDispatchToProps с помощью доп функций, selectSong также попадет в пропсы,\n// но при этом не вызовет action\nexport default connect(mapStateToProps, mapDispatchToProps)(SongList);\n","export default function Framework({ name, progress, onChange }) {\n    return (\n        <div className='framework'>\n            <p>\n                Name:\n                {name}\n            </p>\n            <label>\n                Progress:\n                <input\n                    type='checkbox'\n                    checked={progress === 'done'}\n                    onChange={onChange}\n                    ref={el => el && (el.indeterminate = progress === 'indeterminate')}\n                />\n            </label>\n        </div>\n    );\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Framework from './Framework';\nimport * as fromActions from '../../old_store/actions';\n\nclass FrameworkList extends Component {\n    componentDidMount() {\n        this.props.fetchFrameworks();\n    }\n\n    getFrameworkList() {\n        const { frameworks, changeFrameworkStatus } = this.props;\n\n        return frameworks.map(framework => {\n            return (\n                <li key={crypto.randomUUID()}>\n                    <Framework onChange={changeFrameworkStatus.bind(this, framework)} {...framework} />\n                </li>\n            );\n        });\n    }\n\n    render() {\n        return <ul>{this.getFrameworkList()}</ul>;\n    }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n    frameworks: state.frameworks,\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n    // обращаю внимание что тут fetchFrameworks а не fetchFrameworks(), тем самым могу в action не писать\n    // доп функцию обертку\n    fetchFrameworks: () => dispatch(fromActions.fetchFrameworks),\n    changeFrameworkStatus: framework => {\n        switch (framework.progress) {\n            case 'done': {\n                framework.progress = null;\n                break;\n            }\n            case 'indeterminate': {\n                framework.progress = 'done';\n                break;\n            }\n            default: {\n                framework.progress = 'indeterminate';\n                break;\n            }\n        }\n\n        dispatch(fromActions.changeFrameworkStatus(framework));\n    },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(FrameworkList);\n","import { FC, memo, useEffect, useState } from 'react';\nimport { COUNTER_TYPES } from '@app/old_store/actions/types';\n\n// Create store\nconst createStore = (reducer: Function) => {\n    let state: number;\n    // так как сабскрайб может вызывааться несколько раз, должны хранить все вызовы\n    const listeners: any[] = [];\n\n    const getState = () => state;\n\n    const dispatch = (action: { type?: string }) => {\n        // каждый раз когда происходит диспач нужно апдейтить стейт\n        state = reducer(state, action);\n        // и вызывать всех слушателей\n        listeners.forEach(listener => listener());\n    };\n\n    const subscribe = (listener: () => void) => {\n        listeners.push(listener);\n\n        // возвращать функцию unsubscribe которая удаляет слушателя из массива всех слушателей\n        return () => listeners.filter(l => l !== listener);\n    };\n\n    // диспатчим первый раз чтобы редьюсер вернул initial value\n    dispatch({});\n\n    return { getState, dispatch, subscribe };\n};\n\n// Reducer\nconst counterReducer = (state = 0, action: { type: string }) => {\n    switch (action.type) {\n        case COUNTER_TYPES.INCREMENT: {\n            return ++state;\n        }\n\n        case COUNTER_TYPES.DECREMENT: {\n            return --state;\n        }\n\n        default:\n            return state;\n    }\n};\n\n// Create store\nconst store = createStore(counterReducer);\n\nconst CounterStore: FC = () => {\n    const [value, setValue] = useState(store.getState());\n\n    useEffect(() => {\n        const storeUnsubscribe = store.subscribe(() => {\n            setValue(store.getState());\n        });\n\n        return () => {\n            storeUnsubscribe();\n        };\n    }, []);\n\n    return (\n        <>\n            <p>{value}</p>\n            <button onClick={() => store.dispatch({ type: COUNTER_TYPES.INCREMENT })}>Increment</button>\n            <button onClick={() => store.dispatch({ type: COUNTER_TYPES.DECREMENT })}>Decrement</button>\n        </>\n    );\n};\n\nexport default memo(CounterStore);\n","import { FC, memo } from 'react';\nimport CounterStore from './counter-store.component';\n\nconst Counters: FC = () => {\n    return (\n        <>\n            <CounterStore />\n            {/* <Counter/>*/}\n            {/* <CounterWithMapDispatchToProps/>*/}\n            {/* <CounterWithMapDispatchToPropsFunc/>*/}\n        </>\n    );\n};\n\nexport default memo(Counters);\n","import { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { sagaGetUserStartAction } from '@app/old_store/actions';\nimport MaterialLoaderComponent from '../../loader/MaterialLoader';\n\nconst ReduxSagaIntroComponent = () => {\n    const dispatch = useDispatch();\n    const users = useSelector(state => state.saga);\n\n    return (\n        <>\n            <button type='button' onClick={() => dispatch(sagaGetUserStartAction())}>\n                Get user\n            </button>\n            {users.loading && <MaterialLoaderComponent />}\n            {!users.loading &&\n                users?.entities?.users?.length &&\n                users?.entities?.users.map(({ id, name }) => {\n                    return <div key={id}>{name}</div>;\n                })}\n        </>\n    );\n};\n\nexport default memo(ReduxSagaIntroComponent);\n","import { memo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { getFamilyAction } from '@app/old_store/actions';\n\nconst FamilySagaComponent = () => {\n    const dispatch = useDispatch();\n\n    return (\n        <button type='button' onClick={() => dispatch(getFamilyAction())}>\n            Get family\n        </button>\n    );\n};\n\nexport default memo(FamilySagaComponent);\n","import { memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { SAGA_TYPES } from '@app/old_store/actions/types';\n\nconst SagaCounterComponent = () => {\n    const sagaState = useSelector(state => state.saga);\n    const dispatch = useDispatch();\n\n    return (\n        <>\n            {sagaState.counter}\n            <button type='button' onClick={() => dispatch({ type: SAGA_TYPES.INCREMENT_COUNTER })}>\n                Increment counter\n            </button>\n            <button type='button' onClick={() => dispatch({ type: SAGA_TYPES.DECREMENT_COUNTER })}>\n                Decrement counter\n            </button>\n        </>\n    );\n};\n\nexport default memo(SagaCounterComponent);\n","import { memo } from 'react';\nimport { TabsComponent } from '../tabs/Tabs';\nimport ReduxSagaIntroComponent from './intro/redux-saga-intro.component';\nimport FamilySagaComponent from './family/family-saga.component';\nimport SagaCounterComponent from './counter/saga-counter.component';\n\nconst ReduxSaga = () => {\n    return (\n        <TabsComponent>\n            <div tabName='Counter'>\n                <SagaCounterComponent />\n            </div>\n            <div tabName='Intro'>\n                <ReduxSagaIntroComponent />\n            </div>\n            <div tabName='Family'>\n                <FamilySagaComponent />\n            </div>\n        </TabsComponent>\n    );\n};\n\nexport default memo(ReduxSaga);\n","import { Component } from 'react';\nimport { Route, Routes } from 'react-router-dom';\nimport PostsAndUsers from '../posts-and-users/PostsAndUsers';\nimport PostList from '../post/PostList';\nimport SongList from '../song/SongList';\nimport FrameworkList from '../framework/FrameworkList';\nimport MainMenu from '../menu/MainMenu';\nimport Counters from '../counter/counters.component';\nimport ReduxSaga from '../redux-saga/redux-saga.component';\n\nexport class ReduxComponent extends Component {\n    render() {\n        return (\n            <>\n                <MainMenu\n                    exact\n                    routes={[\n                        { to: '/redux', title: 'Sagas' },\n                        { to: '/redux/todos', title: 'Todos' },\n                        { to: '/redux/counters', title: 'Counters' },\n                        { to: '/redux/song-list', title: 'SongList' },\n                        {\n                            to: '/redux/posts-and-users',\n                            title: 'PostsAndUsers',\n                        },\n                        { to: '/redux/post-list', title: 'PostList' },\n                        { to: '/redux/framework-list', title: 'FrameworkList' },\n                        { to: '/redux/user-list', title: 'UserList' },\n                    ]}\n                />\n\n                <Routes>\n                    <Route path='/redux' element={<ReduxSaga />} />\n                    <Route path='/redux/counters' element={<Counters />} />\n                    <Route path='/redux/song-list' element={<SongList />} />\n                    <Route path='/redux/posts-and-users' element={<PostsAndUsers />} />\n                    <Route path='/redux/post-list' element={<PostList />} />\n                    <Route path='/redux/framework-list' element={<FrameworkList />} />\n                </Routes>\n            </>\n        );\n    }\n}\n","import React, { memo } from 'react';\nimport { ReduxComponent } from '../components/redux/Redux';\n\nexport default memo(() => {\n    return <ReduxComponent />;\n});\n"],"names":["TabsComponent","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","activeTab","onClick","index","setState","prevState","prevProps","_createClass","key","value","this","props","undefined","_this2","children","tabsHeader","tabsBody","Children","map","child","push","getTabsHeaderView","getTabsBody","_jsxs","className","_jsx","bind","tabName","crypto","randomUUID","Component","PostsAndUsers","fetchPostsAndUsers","user","userName","name","_this$props","posts","users","_ref","title","id","body","userId","getAuthorContent","connect","Post","PostUser","fetchUserById","findUser","PostList","fetchPosts","post","_objectSpread","ownProps","Song","selected","onSelect","style","backgroundColor","type","selectedSong","_selectedSong$song","song","duration","likes","_Fragment","SongList","getSongsList","SongDetails","songs","selectSong","isSelected","dispatch","Framework","progress","onChange","checked","ref","el","indeterminate","FrameworkList","fetchFrameworks","frameworks","changeFrameworkStatus","framework","getFrameworkList","fromActions","store","reducer","listeners","action","forEach","listener","getState","subscribe","filter","l","createStore","COUNTER_TYPES","INCREMENT","DECREMENT","CounterStore","_useState","useState","_useState2","_slicedToArray","setValue","useEffect","storeUnsubscribe","memo","Counters","ReduxSagaIntroComponent","_users$entities","_users$entities$users","_users$entities2","useDispatch","useSelector","saga","sagaGetUserStartAction","loading","MaterialLoaderComponent","entities","FamilySagaComponent","getFamilyAction","SagaCounterComponent","sagaState","counter","SAGA_TYPES","INCREMENT_COUNTER","DECREMENT_COUNTER","ReduxSaga","ReduxComponent","MainMenu","exact","routes","to","Routes","Route","path","element"],"sourceRoot":""}